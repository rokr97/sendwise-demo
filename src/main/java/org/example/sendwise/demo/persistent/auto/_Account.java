package org.example.sendwise.demo.persistent.auto;

import java.math.BigDecimal;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.example.sendwise.demo.persistent.TransferRequest;

/**
 * Class _Account was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Account extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> ACCNO = Property.create("accno", String.class);
    public static final Property<BigDecimal> BALANCE = Property.create("balance", BigDecimal.class);
    public static final Property<String> CURRENCY = Property.create("currency", String.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<List<TransferRequest>> RECEIVED = Property.create("received", List.class);
    public static final Property<List<TransferRequest>> SENT = Property.create("sent", List.class);

    public void setAccno(String accno) {
        writeProperty("accno", accno);
    }
    public String getAccno() {
        return (String)readProperty("accno");
    }

    public void setBalance(BigDecimal balance) {
        writeProperty("balance", balance);
    }
    public BigDecimal getBalance() {
        return (BigDecimal)readProperty("balance");
    }

    public void setCurrency(String currency) {
        writeProperty("currency", currency);
    }
    public String getCurrency() {
        return (String)readProperty("currency");
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void addToReceived(TransferRequest obj) {
        addToManyTarget("received", obj, true);
    }
    public void removeFromReceived(TransferRequest obj) {
        removeToManyTarget("received", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TransferRequest> getReceived() {
        return (List<TransferRequest>)readProperty("received");
    }


    public void addToSent(TransferRequest obj) {
        addToManyTarget("sent", obj, true);
    }
    public void removeFromSent(TransferRequest obj) {
        removeToManyTarget("sent", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TransferRequest> getSent() {
        return (List<TransferRequest>)readProperty("sent");
    }


}
