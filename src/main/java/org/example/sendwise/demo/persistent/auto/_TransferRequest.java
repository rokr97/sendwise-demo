package org.example.sendwise.demo.persistent.auto;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.example.sendwise.demo.persistent.Account;

/**
 * Class _TransferRequest was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _TransferRequest extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<BigDecimal> AMOUNT = Property.create("amount", BigDecimal.class);
    public static final Property<String> CURRENCY = Property.create("currency", String.class);
    public static final Property<LocalDateTime> WHEN = Property.create("when", LocalDateTime.class);
    public static final Property<Account> RECEIVER = Property.create("receiver", Account.class);
    public static final Property<Account> SENDER = Property.create("sender", Account.class);

    public void setAmount(BigDecimal amount) {
        writeProperty("amount", amount);
    }
    public BigDecimal getAmount() {
        return (BigDecimal)readProperty("amount");
    }

    public void setCurrency(String currency) {
        writeProperty("currency", currency);
    }
    public String getCurrency() {
        return (String)readProperty("currency");
    }

    public void setWhen(LocalDateTime when) {
        writeProperty("when", when);
    }
    public LocalDateTime getWhen() {
        return (LocalDateTime)readProperty("when");
    }

    public void setReceiver(Account receiver) {
        setToOneTarget("receiver", receiver, true);
    }

    public Account getReceiver() {
        return (Account)readProperty("receiver");
    }


    public void setSender(Account sender) {
        setToOneTarget("sender", sender, true);
    }

    public Account getSender() {
        return (Account)readProperty("sender");
    }


    protected abstract void onPostAdd();

}
